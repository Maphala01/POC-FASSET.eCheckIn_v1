@model FASSET.eCheckIn_v1.Models.Guest_StaffModel
@{
    Layout = "~/Views/Shared/_LayoutManual.cshtml";
    var departmentsList = ViewBag.Departments as List<FASSET.eCheckIn_v1.Models.Department_2>;
    var employeesList = ViewBag.Employees as List<FASSET.eCheckIn_v1.Models.Employee_2>;
    var capacitiesList = ViewBag.Capacities as List<FASSET.eCheckIn_v1.Models.Capacity>;
    var titlesList = ViewBag.Titles as List<FASSET.eCheckIn_v1.Models.Title>;
    var enquiresList = ViewBag.Enquiries as List<FASSET.eCheckIn_v1.Models.EnquiryType>;
}

<!DOCTYPE html>
    <html>
    <head>
        <meta name="viewport" content="width=device-width"/>
        <title>FASSET - EcheckIn Form &reg;</title>
        <link href="~/Content/select2.min.css" rel="stylesheet"/>
        <link href="~/Content/toastr.min.css" rel="stylesheet"/>
    </head>
    <body>
              
        <div class="container" id="container">
            <div class="form-container sign-up-container">
                <form class="Form" action="@Url.Action("SubmitRegistration_Guest", "Staff_Guest")" method="post" id="Guest_Form">
                    <h1>GUEST CHECK-IN</h1>
                    <div class="input-animated">
                        <input placeholder="REPRESENTING CAPACITY" required="" list="capacities" name="Capacity" id="capacity" type="text" autocomplete="off" oninput="toggleCompanyField()" onchange="focusNextField('company')">
                        <datalist id="capacities">
                            <option value="">Select a Capacity</option>
                            @if (capacitiesList != null)
                            {
                                var capacityList = capacitiesList.Take(5);
                                foreach (var capacity in capacityList)
                                {
                                    <option value="@capacity.CapacityName">@capacity.CapacityName</option>
                                }
                            }
                        </datalist>
                    </div>
                    <input type="text" id="company" name="Company" placeholder="COMPANY" autocomplete="off" disabled />

                    <input placeholder="TITLE" required="" list="titles" name="Title" id="title" type="text" autocomplete="off" onchange="focusNextField('name')">
                    <datalist id="titles">
                        <option value="">Select a Title</option>
                        @if (titlesList != null)
                        {
                            var titleList = titlesList.Take(5);
                            foreach (var title in titleList)
                            {
                                <option value="@title.TitleName">@title.TitleName</option>
                            }
                        }
                    </datalist>
                    <input type="text" id="name" placeholder="GUEST'S NAME" autocomplete="off" name="guestName" />
                    <input type="email" id="email" placeholder="GUEST'S EMAIL" autocomplete="off" name="guestEmail" />
                    <input placeholder="ENQUIRY TYPE" required="" list="enquires" name="enquiryType" id="enquiry" type="text" autocomplete="off" onchange="focusNextField('submit-button')">
                    <datalist id="enquires">
                        <option value="">Select an Enquiry</option>
                        @if (enquiresList != null)
                        {
                            var enquiryList = enquiresList.Take(5);
                            foreach (var enquiry in enquiresList)
                            {
                                <option value="@enquiry.EnquiryName">@enquiry.EnquiryName</option>
                            }
                        }
                    </datalist>
                    @*<button>SUBMIT</button>*@
                    <button type="submit" id="submit-button">Submit</button>
                </form>
            </div>

            <div class="form-container sign-in-container">
                <form class="Form" action="@Url.Action("SubmitRegistration", "Staff_Guest")" method="post">
                    <h1>STAFF CHECK-IN</h1>
                    <div class="input-animated">
                        <input placeholder="DEPARTMENT" required="" list="departments" name="Department" id="department" type="text" autocomplete="off">
                        <datalist id="departments">
                            <option value="">Select a Department</option>
                            @if (departmentsList != null)
                            {
                                var departmentList = departmentsList.Take(5);
                                foreach (var department in departmentList)
                                {
                                    <option value="@department.DepartmentName">@department.DepartmentName</option>
                                }
                            }
                        </datalist>

                    </div>

                    <div class="input-animated">
                        <input placeholder="EMPLOYEE" required="" list="employees" name="Employee" id="employee" type="text" autocomplete="off">
                        @*<label class="label-employee" for="employee"><span class="content-employee">EMPLOYEE</span></label>*@
                        <datalist id="employees">
                            <option value="">Select an Employee</option>
                            @if (employeesList != null)
                            {
                                var employeeList = employeesList.Take(5);
                                foreach (var employee in employeeList)
                                {
                                    <option value="@employee.EmployeeName">@employee.EmployeeName</option>
                                }
                            }
                        </datalist>
                    </div>

                    <input type="hidden" name="GeoLocation" id="geoLocationDisplay">
                    <input type="hidden" name="Timestamp" id="timestampDisplay">

                    <button type="submit" onclick="processOtp()" id="submit-button">Submit</button>
                </form>
            </div>

            <div class="overlay-container">
                <div class="overlay">                 
                    <div class="overlay-panel overlay-left">
                        <h1 class="MainHead">FASSET Echeck-In&reg</h1>
                        <img class="pic_pad" src="~/Content/Small_Fasset-.png" />
                        <h2>
                            Welcome, Back Colleague
                        </h2>
                        <p class="welcomeP">
                            Nice to see you again. Please check in to start your workday.
                        </p>
                        <button class="ghost" id="signIn">FASSET Staff</button>
                    </div>
                    <div class="overlay-panel overlay-right">
                        <h1 class="MainHead1">FASSET Echeck-In&reg</h1>
                        <img class="pic_pad" src="~/Content/Small_Fasset-.png" />
                        <h1>
                            Welcome to FASSET
                        </h1>
                        <p class="welcomeP">
                            Please check in, so you may assist us in assisting you
                        </p>
                        <button class="ghost" id="signUp">GUEST</button>
                    </div>
                </div>
            </div>
        </div>
        <footer>
            <p>
                Created with <i class="fa fa-heart"></i> by
                <a target="_blank" href="www.fasset.org.za">FASSET&reg; - 2024</a>
            </p>
        </footer>

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="~/Content/select2.min.js"></script>
        <script src="~/Content/toastr.min.js"></script>

        <script>

            $(document).ready(function() {
            // Event listener for department input
                $('#department').on('input', function() {
                    var inputVal = $(this).val();
                    if (inputVal.length >= 2) {  // Trigger AJAX only if input has 2 or more characters
                        $.ajax({
                            url: '@Url.Action("GetDepartments", "Registration")',
                            type: 'GET',
                            data: { term: inputVal },
                            success: function(data) {
                                var departmentList = $('#departments'); // Ensure this matches the datalist ID in your form
                                departmentList.empty();
                                departmentList.append('<option value="">Select a Department</option>');
                                if (data.length > 0) {
                                    $.each(data, function(index, department) {
                                        departmentList.append('<option value="' + department.DepartmentName + '">' + department.DepartmentName + '</option>');
                                    });
                                } else {
                                    departmentList.append('<option value="No results found">No results found</option>');
                                }
                            }
                        });
                    } else {
                        $('#departments').empty(); // Clear the datalist if input is less than 2 characters
                    }
                });

                // Event listener for employee input
                $('#employee').on('input', function() {
                    var inputVal = $(this).val();
                    if (inputVal.length >= 3) {  // Trigger AJAX only if input has 3 or more characters
                        $.ajax({
                            url: '@Url.Action("GetEmployees", "Registration")',
                            type: 'GET',
                            data: { term: inputVal },
                            success: function(data) {
                                var employeeList = $('#employees');
                                employeeList.empty();
                                employeeList.append('<option value="">Select an Employee</option>');
                                if (data.length > 0) {
                                    $.each(data, function(index, employee) {
                                        employeeList.append('<option value="' + employee.EmployeeName + '">' + employee.EmployeeName + '</option>');
                                    });
                                } else {
                                    employeeList.append('<option value="No results found">No results found</option>');
                                }
                            }
                        });
                    } else {
                        $('#employees').empty(); // Clear the datalist if input is less than 3 characters
                    }
                });

                $('#department').on('change', function () {

                    $('#employee').focus();
                });

                $('#employee').on('change', function () {
                    $('#submit-button').focus();
                    processOtp(); // Trigger processOtp when employee is selected
                });

                // Clear inputs when FASSET Staff or Guest button is clicked
                function clearInputs() {
                    $('#department').val('');
                    $('#employee').val('');
                    $('#departments').empty();
                    $('#employees').empty();
                    $('#repCapacity').val('');
                    $('#company').val('');
                    $('#repCapacity').empty();
                    $('#company').empty();
                    $('#title').val('');
                    $('#name').val('');
                    $('#title').empty();
                    $('#name').empty();
                    $('#email').val('');
                    $('#enquiry').val('');
                    $('#email').empty();
                    $('#enquiry').empty();
                }

                // Event listener for FASSET Staff button
                $('#signIn').on('click', function () {
                    clearInputs();
                    container.classList.remove("right-panel-active");
                });

                // Event listener for Guest button
                $('#signUp').on('click', function () {
                    clearInputs();
                    container.classList.add("right-panel-active");
                });

                

            });

            function filterOptions(inputElement, dataListId) {
                const filterValue = inputElement.value.toLowerCase();
                const dataList = document.getElementById(dataListId);
                const options = dataList.querySelectorAll('option');

                options.forEach(option => {
                    if (option.value.toLowerCase().includes(filterValue)) {
                        option.style.display = '';
                    } else {
                        option.style.display = 'none';
                    }
                });
            }

            document.getElementById('department').addEventListener('input', function () {
                filterOptions(this, 'departments');
            });

            document.getElementById('employee').addEventListener('input', function () {
                filterOptions(this, 'employees');
            });



            const signUpButton = document.getElementById('signUp');
            const signInButton = document.getElementById('signIn');
            const container = document.getElementById('container');

            signUpButton.addEventListener('click', () => {
                container.classList.add("right-panel-active");
            });

            signInButton.addEventListener('click', () => {
                container.classList.remove("right-panel-active");
            });

            function toggleCompanyField() {
                var capacityField = document.getElementById('capacity');
                var companyField = document.getElementById('company');

                // List of capacities that should enable the company field
                var enableCompanyConditions = [
                    "On behalf of an organization",
                    "Contractor or consultant",
                    "Guest of an employee",
                    "Other"
                ];

                // Enable or disable the company field based on the selected capacity
                if (enableCompanyConditions.includes(capacityField.value)) {
                    companyField.disabled = false;
                } else {
                    companyField.disabled = true;
                    companyField.value = '';  // Clear the company field if it's disabled
                }
            }

            // Ensure the field is disabled on page load
            window.onload = function () {
                toggleCompanyField();
            }

            function processOtp() {
                console.log("processOtp function triggered");

                var otp = "";
                document.querySelectorAll('.otp-input').forEach(input => {
                    otp += input.value;
                });
                console.log("OTP generated:", otp);

                var hiddenOtp = document.createElement('input');
                hiddenOtp.type = 'hidden';
                hiddenOtp.name = 'userTotp';
                hiddenOtp.value = otp;
                document.querySelector('.Form').appendChild(hiddenOtp);

                var timestamp = new Date().toISOString();
                console.log("Timestamp generated:", timestamp);
                document.getElementById('timestampDisplay').value = timestamp;

                if (navigator.geolocation) {
                    console.log("Geolocation supported. Getting position...");
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var latitude = position.coords.latitude;
                        var longitude = position.coords.longitude;
                        var geoLocation = latitude + ',' + longitude;
                        console.log("Geolocation acquired:", geoLocation);
                        document.getElementById('geoLocationDisplay').value = geoLocation;
                       /* document.querySelector('.Form').submit();*/
                    }, function (error) {
                        console.error('Error getting geolocation: ' + error.message);
                        document.getElementById('geoLocationDisplay').value = "0,0";
                        /*document.querySelector('.Form').submit();*/
                    });
                } else {
                    console.error('Geolocation is not supported by this browser.');
                    document.getElementById('geoLocationDisplay').value = "0,0";
                   /* document.querySelector('.Form').submit();*/
                }
            }

            function toggleCompanyField() {
                const capacity = document.getElementById("capacity").value;
                const companyField = document.getElementById("company");
                const titleField = document.getElementById("title");

                // Define valid capacities that should enable the company field
                const validCapacities = [
                    "On behalf of an organization",
                    "Contractor or consultant",
                    "Guest of an employee",
                    "Other"
                ];

                if (validCapacities.includes(capacity)) {
                    // Enable and focus on the company field if valid capacity is selected
                    companyField.disabled = false;
                    companyField.focus();
                } else if (capacity) {
                    // Focus on the title field if capacity is not valid for company entry
                    companyField.disabled = true;
                    companyField.value = ''; // Clear the company field if it's disabled
                    titleField.focus(); // Move focus to the title field
                } else {
                    // Handle case when no valid capacity is selected
                    companyField.disabled = true;
                    companyField.value = ''; // Clear the company field
                }
            }

            function focusNextField(nextFieldId) {
                const nextField = document.getElementById(nextFieldId);
                if (nextField) {
                    nextField.focus();
                }
            }

            document.getElementById("capacity").addEventListener("change", toggleCompanyField);

        </script>
    </body>
    </html>


